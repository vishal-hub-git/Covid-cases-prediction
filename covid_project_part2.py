import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
ds1=pd.read_excel("series.xlsx")
ds1["April"].fillna((ds1["May"]-0)//2,inplace=True)
ds1["May"].fillna(ds1["June"]-ds1["April"],inplace=True)
ds1["June"].fillna(ds1["July"]-ds1["May"],inplace=True)
ds1["July"].fillna(ds1["August"]-ds1["June"],inplace=True)
ds1["August"].fillna(ds1["August"].mean(),inplace=True)
a=abs(ds1["May"]-ds1["April"])
b=abs(ds1["June"]-ds1["May"])
c=abs(ds1["July"]-ds1["June"])
d=abs(ds1["August"]-ds1["July"])
f=(a+b+c+d)//4
f.fillna(int(f.mean()),inplace=True)
ds1=pd.concat([ds1,f],axis="columns")
f+=ds1["August"]
ds=pd.read_excel("Train_dataset.xlsx")
ds=ds.drop("Popuation [2001]",axis=1)
ds["Population [2011]"].fillna(ds["Population [2011]"].mean(),inplace=True)
ds["Sex Ratio"].fillna(ds["Sex Ratio"].mean(),inplace=True)
ds["Median Age"].fillna(ds["Median Age"].mean(),inplace=True)
ds["Avg Temp"].fillna(ds["Median Age"].mean(),inplace=True)
ds["SWM"].fillna("MEDIUM",inplace=True)
ds["Toilets Avl"].fillna(ds["Toilets Avl"].mean(),inplace=True)
ds["Water Purity"].fillna(ds["Water Purity"].mean(),inplace=True)
ds["H Index"].fillna(ds["H Index"].mean(),inplace=True)
ds["Female Population"].fillna(ds["Female Population"].mean(),inplace=True)
ds["# of hospitals"].fillna(ds["# of hospitals"].mean(),inplace=True)
ds["Foreign Visitors"].fillna(ds["Foreign Visitors"].mean(),inplace=True)
ds=ds.drop("City",axis=1)
ds["Type"]=ds["Type"].replace({"M.Corp.":"M.Corp","M.C1.":"M.C1","NP":"N.P","UA":"U.A","T.M.C.":"T.M.C","C.T.":"C.T","CMC":"C.M.C"})
ds["Type"]=ds["Type"].replace({"N.P.":"N.P","M.C1.":"M.C1","N.P.P.":"N.P.P","NPP":"N.P.P","T.P.":"T.P","Np":"N.P","Nagar Parishad":"N.Pd","N.P.":"N.P","M.C1.":"M.C1","M Cl":"M.C1"})
ds["Type"]=ds["Type"].replace({"M.Cl.":"M.Cl","M.B.":"M.B","MB":"M.B"})
ds["State"]=ds["State"].replace({"Tamil nadu":"Tamil Nadu"})
ds["SWM"]=ds["SWM"].replace({"LOW":0,"MEDIUM":1,"HIGH":2})
le=LabelEncoder()
ds["State"]=le.fit_transform(ds["State"])
ds["Type"]=le.fit_transform(ds["Type"])
y_train=ds["Covid Cases"]
ds=ds.drop("Covid Cases",axis=1)
x_train=ds
x_test=pd.read_excel("Test_dataset.xlsx")
x_test["Popuation [2001]"].isnull().sum()
x_test=x_test.drop("Popuation [2001]",axis=1)
x_test["Population [2011]"].fillna(x_test["Population [2011]"].mean(),inplace=True)
x_test["Sex Ratio"].fillna(x_test["Sex Ratio"].mean(),inplace=True)
x_test["Median Age"].fillna(x_test["Median Age"].mean(),inplace=True)
x_test["Avg Temp"].fillna(x_test["Median Age"].mean(),inplace=True)
x_test["SWM"].fillna("MEDIUM",inplace=True)
x_test["Toilets Avl"].fillna(x_test["Toilets Avl"].mean(),inplace=True)
x_test["H Index"].fillna(x_test["H Index"].mean(),inplace=True)
x_test["Water Purity"].fillna(x_test["Water Purity"].mean(),inplace=True)
x_test["Type"].fillna("N.P",inplace=True)
x_test["Female Population"].fillna(x_test["Female Population"].mean(),inplace=True)
x_test["# of hospitals"].fillna(x_test["# of hospitals"].mean(),inplace=True)
x_test["Foreign Visitors"].fillna(x_test["Foreign Visitors"].mean(),inplace=True)
x_test["Foreign Visitors"]=f
x_test["Type"]=x_test["Type"].replace({"M.Corp.":"M.Corp","M.C1.":"M.C1","NP":"N.P","UA":"U.A","T.M.C.":"T.M.C","C.T.":"C.T","CMC":"C.M.C"})
x_test["Type"]=x_test["Type"].replace({"N.P.":"N.P","M.C1.":"M.C1","N.P.P.":"N.P.P","NPP":"N.P.P","T.P.":"T.P","Np":"N.P","Nagar Parishad":"N.Pd","N.P.":"N.P","M.C1.":"M.C1","M Cl":"M.C1"})
x_test["Type"]=x_test["Type"].replace({"M.Cl.":"M.Cl","M.B.":"M.B","MB":"M.B"})
x_test["State"]=x_test["State"].replace({"Tamil nadu":"Tamil Nadu"})
x_test["SWM"]=x_test["SWM"].replace({"LOW":0,"MEDIUM":1,"HIGH":2})
x_test["Type"]=x_test["Type"].replace({"M.C.":"M.C","TP":"T.P","N.A.C.":"N.A.C","T.C.":"T.C","G.P.":"G.P","NAC":"N.A.C","CT":"C.T"})
x_test["State"]=x_test["State"].replace({"Nagaland":31,"Karnataka":3,"Punjab":13,"Maharashtra":1,"Uttar Pradesh":9,"Telangana":4,"Rajasthan":8,"West Bengal":7,"Arunachal Pradesh":28,"Jharkhand":14,"Madhya Pradesh":10,"Andhra Pradesh":11,"Jammu and Kashmir":16,"Tamil Nadu":6,"Gujarat":5,"Himachal Pradesh":27,"Uttarakhand":22,"Bihar":12,"Kerala":21,"Odisha":20,"Haryana":15,"Tripura":23,"Chhattisgarh":18,"Assam":19,"Meghalaya":32,"Manipur":26,"Dadra and Nagar Haveli":29,"Mizoram":25,"Andhra pradesh":11})
x_test["Type"]=x_test["Type"].replace({'T.C':17,'T.M.C':18,'M.Cl':16,'N.P':8,'U.A':9,'M':4,'N.T':19,'C.T':14,'M.B':10,'I.N.A':22,'N.P.P':12,'N.A':22,'N.A.C':15,'M.C':1,'T.P':21,'G.P':8,'M&F':2})
x_test=x_test.drop("City",axis=1)
from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor(n_estimators = 1000, random_state = 42)
rf.fit(x_train,y_train)
y_pred=rf.predict(x_test)
for i in y_pred:
    print(abs(int(i)))